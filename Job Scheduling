import java.util.*;
public class Solution {
    
    static void fun(ArrayList<Character> name,ArrayList<Integer> dl,ArrayList<Integer> amt,int max)
    {
        String s = "";
        char b[] = new char[max+1];
        for(int i=amt.size()-1;i>=0;i--)
        { 
            for(int j=dl.get(i);j>0;j--)
            {
                if(b[j]==0)
                {
                    b[j]=name.get(i);
                    break;
                }
            }
        }
        for(int i=1;i<=max;i++)
            System.out.print(b[i]+" ");
        
        
    }

 
   public static void main(String args[]) {
       Scanner z= new Scanner(System.in);
       ArrayList<Character> name = new ArrayList<>();
       ArrayList<Integer> dl = new ArrayList<>();
       ArrayList<Integer> amt = new ArrayList<>();
       
      while(z.hasNext())
       {
          name.add(z.next().charAt(0));
          dl.add(z.nextInt());
          amt.add(z.nextInt());
       }
       for(int i=0;i<dl.size();i++)
       {
           for(int j=0;j<dl.size();j++)
           {
               if(amt.get(i)<amt.get(j))
               {
                   Collections.swap(name, i, j);
                   Collections.swap(dl, i, j);
                   Collections.swap(amt, i, j);  
                }
           }
       }
       int max=Collections.max(dl);
       fun(name,dl,amt,max);
   }
}
===================================================



import java.util.*;
public class Job {
   char id;
   int deadline, profit;
   public Job() {}
   public Job(char id, int deadline, int profit) {
      this.id = id;
      this.deadline = deadline;
      this.profit = profit;
   }
   void printJobScheduling(ArrayList<Job> arr, int t) {
   
      int n = arr.size();
      
      Collections.sort(arr,(a, b) -> b.profit - a.profit);
      
      boolean result[] = new boolean[t];
      
      char job[] = new char[t];
   
      for (int i = 0; i < n; i++) {
      
         for (int j = Math.min(t - 1, arr.get(i).deadline - 1); j >= 0; j--) {
         
            if (result[j] == false) {
               result[j] = true;
               job[j] = arr.get(i).id;
               break;
            }
         }
      }
   
      for (char jb : job)
      System.out.print(jb + " ");
      System.out.println();
   }
 
   public static void main(String args[]) {
      ArrayList<Job> arr = new ArrayList<Job>();
      arr.add(new Job('a', 2, 100));
      arr.add(new Job('b', 1, 20));
      arr.add(new Job('c', 2, 40));
      arr.add(new Job('d', 1, 80));
      arr.add(new Job('e', 3, 60));

      System.out.println("Following is maximum profit sequence of jobs");
      Job job = new Job();
     
      job.printJobScheduling(arr, 3);
   }
}
